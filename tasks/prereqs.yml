---
- name: "Upgrade all packages"
  block:
    - name: "upgrade all packages"
      yum:
        name: '*'
        state: latest
      register: task_result

    - name: "Reboot immediately if there was a change."
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: task_result is changed

    - name: "Wait for the reboot to complete if there was a change."
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 500
      when: task_result is changed

  become: true

- name: "Configure Azure with OpenShift requirements."
  block:
    - name: "Create a resource group for OCP Cluster, from localhost"
      azure_rm_resourcegroup:
        name: "{{ ocp4_install_resourcegroup }}"
        location: "{{ ocp4_install_location }}"
      delegate_to: localhost

# The localhost must be able to create azure resources to work.
    - name: "Create a DNS zone for OpenShift cluster, from localhost"
      azure_rm_dnszone:
        resource_group: "{{ocp4_install_baseDomain_resourcegroup}}"
        name: "{{ocp4_install_baseDomain}}"
      delegate_to: localhost

    - name: Print inventory hostname
      ansible.builtin.debug:
        var: inventory_hostname

# This is the one task that relies on the dynamic inventory created by cornerstone role. 
# If cornerstone is not used, this could try create a dns entry with a hostname.
    - name: "Create A record for Bastion server"
      azure_rm_dnsrecordset:
        resource_group: "{{ ocp4_install_baseDomain_resourcegroup }}"
        relative_name: bastion
        zone_name: "{{ ocp4_install_baseDomain }}"
        record_type: A
        records:
          - entry: "{{ inventory_hostname }}"
      delegate_to: localhost

  become: true
  when: ocp4_platform == "azure"

- name: "Configure GCP with OpenShift requirements."
  block:

#cannot create a project atm
#  - name: "create a project"
#    google.cloud.gcp_resourcemanager_project:
#      name: "{{ ocp4_install_resourcegroup }}"
#      id: "{{ ocp4_install_resourcegroup }}"
#      auth_kind: serviceaccount
#      service_account_file: "{{ ocp4_install_gcp_serviceaccount_file }}"
#      parent:
#        type: organization
#        id: "{{ ocp4_install_gcp_account_id }}"
#      state: present
#    delegate_to: localhost

  - name: "create a managed zone"
    google.cloud.gcp_dns_managed_zone:
      name: "{{ ocp4_install_baseDomain_name }}"
      dns_name: "{{ ocp4_install_baseDomain }}"
      description: "Zone for {{ ocp4_install_baseDomain_description }}"
      project: "{{ ocp4_install_resourcegroup }}"
      auth_kind: serviceaccount
      service_account_file: "{{ ocp4_install_gcp_serviceaccount_file }}"
      state: present
    delegate_to: localhost

  become: true
  when: ocp4_platform == "gcp"
